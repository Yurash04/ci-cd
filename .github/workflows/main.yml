name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Download model
      run: python scripts/download_model.py
      env:
        MODEL_URL: ${{ secrets.MODEL_URL }}
        
    - name: Run tests
      run: |
        python -m pytest tests/
        
    - name: Generate model report
      run: python generate_report.py
      
    - name: Upload model report
      uses: actions/upload-artifact@v4
      with:
        name: model_report
        path: model_report.md
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/car-price-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Start backend server
      run: |
        python backend/backend.py &
        sleep 10  # Wait for the server to start
        curl -X POST http://localhost:8000/predict \
          -H "Content-Type: application/json" \
          -d '{"year": 2015, "make": "Toyota", "model": "Camry", "trim": "LE", "body": "sedan", "transmission": "automatic", "vin": "4T1BF1FKXEU123456", "state": "CA", "condition": 4, "odometer": 50000, "color": "blue", "interior": "black", "seller": "test", "saledate": "Mon Mar 15 2021 12:00:00"}' 